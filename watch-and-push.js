// Script para monitorar mudan√ßas e fazer push autom√°tico
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

let isProcessing = false;
let timeoutId = null;

function autoPush(message = 'feat: atualiza√ß√£o autom√°tica') {
  if (isProcessing) {
    console.log('‚è≥ Push j√° em andamento, aguardando...');
    return;
  }

  try {
    isProcessing = true;
    console.log('ü§ñ Iniciando push autom√°tico...');
    
    // Verificar se h√° mudan√ßas
    const status = execSync('git status --porcelain', { encoding: 'utf8' });
    
    if (!status.trim()) {
      console.log('‚úÖ Nenhuma mudan√ßa detectada');
      isProcessing = false;
      return;
    }
    
    console.log('üìù Mudan√ßas detectadas, fazendo commit...');
    
    // Adicionar todas as mudan√ßas
    execSync('git add .', { stdio: 'inherit' });
    
    // Fazer commit
    execSync(`git commit -m "${message}"`, { stdio: 'inherit' });
    
    console.log('üöÄ Fazendo push...');
    
    // Fazer push
    execSync('git push origin main', { stdio: 'inherit' });
    
    console.log('‚úÖ Push autom√°tico conclu√≠do com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro no push autom√°tico:', error.message);
  } finally {
    isProcessing = false;
  }
}

function debouncedAutoPush() {
  if (timeoutId) {
    clearTimeout(timeoutId);
  }
  
  timeoutId = setTimeout(() => {
    autoPush();
  }, 2000); // Aguarda 2 segundos ap√≥s a √∫ltima mudan√ßa
}

function watchFiles() {
  console.log('üëÄ Monitorando mudan√ßas nos arquivos...');
  console.log('üí° O push ser√° feito automaticamente ap√≥s 2 segundos de inatividade');
  console.log('üõë Pressione Ctrl+C para parar');
  
  // Monitorar diret√≥rio src
  const srcPath = path.join(__dirname, 'src');
  
  fs.watch(srcPath, { recursive: true }, (eventType, filename) => {
    if (filename && !filename.includes('node_modules') && !filename.includes('.git')) {
      console.log(`üìÅ Mudan√ßa detectada: ${filename}`);
      debouncedAutoPush();
    }
  });
}

// Executar se chamado diretamente
if (require.main === module) {
  const command = process.argv[2];
  
  if (command === 'watch') {
    watchFiles();
  } else {
    const message = process.argv[2] || 'feat: atualiza√ß√£o autom√°tica';
    autoPush(message);
  }
}

module.exports = { autoPush, watchFiles };
